{"version":3,"sources":["node_modules/@emailjs/browser/es/store/store.js","node_modules/@emailjs/browser/es/methods/init/init.js","node_modules/@emailjs/browser/es/utils/validateParams.js","node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","node_modules/@emailjs/browser/es/api/sendPost.js","node_modules/@emailjs/browser/es/methods/send/send.js","node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","node_modules/@emailjs/browser/es/index.js","assets/js/email.js"],"names":["store","_origin","init","publicKey","origin","_userID","validateParams","serviceID","templateID","EmailJSResponseStatus","httpResponse","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","findHTMLForm","form","currentForm","document","querySelector","nodeName","sendForm","formData","FormData","append","getElementById","name","organization","email","mobile","content","agree","btn","checkMobileFormat","e","keyCode","preventDefault","sendEmail","checked","alert","value","then","err"],"mappings":";;AQAA;;AAEA,IAAAE,aAAA,EAAK,4BAAL;AAEA,IAAM0C,IAAI,GAAGE,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CAAb;AACA,ARLO,IQKDC,ARLOtD,IQKH,CRLQ,EQKL8C,CRLQ,OQKA,CAACC,aAAT,CAAuB,OAAvB,CAAb;AACA,AJNA,AHAA,AIAA,ACAA,AJAO,EFCH9C,EQKEsD,ANNOjD,KFCF,EAAE,KQKK,ENNS,CMMNwC,ENNS,MMMD,CAACC,ENNjBzC,WMMQ,CAAuB,ENNd,CAACH,SAAD,EAAYI,CMMrB,CAArB,ONN8B,EAAuBC,UAAvB,EAAsC;AMOpE,ARPqB,CAAd,CECH,EMMEgD,ENNE,CAACrD,EMME,GAAG2C,INNV,EAAgB,EMME,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,AJPA,AHAA,AIAA,ACAA,IEOMU,ANNE,MMMI,ANNE,GMMCX,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf,2CNNQ;AMOR,APPA,ECCK,EMMCW,OAAO,GAAGZ,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACA,AJRO,AHCP,AIDA,ACAA,IEQMY,AJRO7C,KIQF,GAAGgC,AJRO,GAAG,KIQF,CAACC,GJRVjC,QAAW,CAACC,CIQX,CAAuB,CJRb,EAAMC,IAAN,CIQV,CAAd,AJRqD;AISrD,APPA,EGFqD,AFEjD,EMOE4C,EJT8B3C,AFE5B,CMOC,ANPAV,GMOGuC,GJTyC,GFEjD,EMOgB,ANPA,CMOCO,cAAT,CAAwB,eAAxB,CAAZ,kCJT8C,EAAO;AHGrD,AIFA,ACAA,EFAI,EEAEV,AHHOlC,ADKL,KEFG,CFEG,GEFCS,GEAG,GAAG,CFAV,CAAY,OEAjByB,GFAkBxB,OAAD,EAAUC,AEAZ,CAACwB,IAAD,CFAE,CEAQ,CFAa,MDFxC,2BDII,ICJQlC,YAAZ,EAA0B;AKY9B,APPO,AIFP,ECAI,AHH0B,ADKzB,EMOCmD,AJTE,AHEK3D,EKFL2C,EFAMxB,AHEG,GGFA,AHEG,GGFA,GEAhB,CFAoBC,EHEXpB,COOU,GAAG,APPN,CAACC,OGFD,CISd0D,CJTE,AHEY,EAAmD,cOO7C,CAACC,CAAD,EAAO;AHRjC,EGSE,APRqE,EGD/DzC,EISA0C,APRwB3D,CGDrB,CAACmB,IHC2D,COQxD,GAAGuC,CAAC,CAACC,MJTZ,CISN,AJT2B,MAArB,EAA6B,gBAAgB,kCHCZ,yBAA8B;AIAvE,EGSE,APRE/D,AKFA,AHHI,ADKJ,IMQE+D,AJV+C,AEA7C,AJEA,CCLKpD,ADKJH,GEF+BgB,GIU3B,AFVEoB,AHHP,CFKJ,CAAMvC,COQM,AJVqC,ADH/BK,CGGd,AJEJ,CMQE,CNRe,GMQCqD,APRlB,AKFoB,EFAgBvC,CHEpBrB,GELc,CKaL,CJVwB,AEAjD,CHHiCO,CKaL,AFVE,EEUhC,APRE,EOQgCoD,CAAC,CAACE,KLbW,CAACrD,MAAhB,EKaE,CLbuB,CAAnD;AKcP,AHTD,CGMA,CPLIX,AELI,EGGA6C,AJEA,EEFI,CDHCjC,GCGKa,AFEJ,CCLN,GFKJ,AELgBf,CFKVT,AKFS,GAAG6C,ILElB,EGF4B,CHEZ1C,CKFU,AHHE,CCGG,AEAJ2C,EHHIrC,ECGID,AHEnC,SKFkB,CAAuBmC,AHHE,CAAC/B,GGG1B,CAAd,QHHwB,GAA+B,eAAvD,GCG2B,CAA0BW,MAA1B,CAAvB,SFEJ;ADCP,AIDD,AFJK,CFEE,CKCF,AJEA,CIJD,MAGK;AEUT,AHTA,IGSMyC,AFTEpB,EFFI,IAAIpB,GIWD,EFTI,CESD,EFTImB,IAAd,EFFsB,CIWxBqB,AJXyBtD,MAAf,GIWE,CAACmD,CAAD,AJXwB,EIWjB,CJXT,IAAiCrC,cAAc,CAACb,IAAf,KAAwB,IAA7D,EAAmE;ACG/E,EGSEkD,AFTG,AJAD,CMSD,CAACE,IJXY7C,CFEL,IAAP,EEFmB,CAACM,EIWtB,YJXqB,CAAP;ACGT,AHAN,CAXM,GGWMO,EDFA,CAFD,CCIK,GAAG,EDDH,OCCJA,IAAO,CAACzB,SAAD,EAAYC,UAAZ,EAAwByB,aAAxB,EAAuC9B,SAAvC,EAAqD;EGUvE,AHTE,ACDA,IEUE,AHTI+B,ACDF,CEUDyB,AFVEd,CFAOzB,CCCH,GGSD,AHTIjB,CGSH+D,CJVS,CAACzC,GEAf,EEUN,CHTuB,CGSH,AFVEoB,GDCK7C,IDDP,CAAN,GEAmB,CAACgD,GDCP,CAAM3C,ICDX,GDCpB,ECD6C,MAA7C,EAAqD;EDErD,EGSA8D,AFVI,EFAK,ACCT7D,GGSK,CAAC,AFVI,wBEUL,CAAL,CHTA,EAAe4B,GAAf,EAAoB3B,SAApB,EAA+BC,UAA/B,mCCDI;EDEJ,ACDC,EEUD,AJVK,CARD,CCSE2B,MAAM,GAAG;AEdnB,ECwBG,EJVKd,ACCAe,GDDG,CAACb,OCCO,EAAE,ODDb,CAAqB,ACAV,ODAX,EAA8B,iBAAgB;EEAlD,EDEIc,EDF8C,GEA3CQ,CFA8BrB,CCE1B,EAAEU,GDFqC,ACAnC,ICAf,KFAqCV,MAAa;AGbtD,ADcC,CAZD,CEuBEoC,EHTMtB,CGSH,CAAC8B,AJXMhD,KIWV,CJXgB,CAAC,CIWL,AHTI,EAAEb,CDFGE,QCDJ,CGYjB,mCJXiB,CAA0Be,MAA1B,CAAD,CAAN;AECZ,EEYE,EJZO,ACEDe,CDJA,CIcA/B,SHVW,CGUD,CHVGA,EGUA,QHdF,UGcjB;AD1BF,ADeA,EEYE,EJZMa,ACEAmB,EGUAjC,CJZG,CAACmB,IAAJ,CAAS,EIYA,GAAG,CJZZ,ACEe,EDFE1B,ACEAiC,YDFA,CAAMhC,CIY7B,MJZuB,GAAgBc,GAAjC,EAAsC,IAAtC;AECR,EEaE,AHjBiB,CAAf,CDIIY,EIaNsB,IJbY,CAACrB,IAAP,CAAYX,OIalB,AJbM,EIaGV,AJbkBsB,OAArB,CAA6B,CIanC,EAAoBrB,OJbgBsB,GIapC,AJbmC,EIaH,AJbY,OIa5C,EAAyCuC,IAAzC,CACE,YAAM;AFbV,EDEI,EGYET,EJdMvC,CIcH,CAAC+C,CJdK,ACEJ,CDFKrC,GIcV,AHZKjB,EEjBI,CC6BG,UJdN,CAAqBgB,CIc3B,EJdM,CCED,CDF2Bb,CCElB,MDFyB,CAACa,GAAD,CAAjC,WCED,EAAiCW,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAjC,EAAyD;ACDpE,ECfIjC,EC6BEiE,AJdG,ACED,CDJA,CGbA,EAAJjE,CC6BO,CAAC,QD9BG,EFkBS,QGYb,CAAL;AFbN,ECfI8B,AFegE,CAAzD,CGcLsB,AJdEjC,ACAJ,EEfI,CHeG,CIcD,AJdEW,AGfRA,CC6BOoC,GJdH,CAASpD,CIcX,GAAa,AJdX,CGjBO,CC+BT;AHXL,ACFD,CDXO,CDWF,AGfDiC,CHJO,CIiCLM,AJjCF,MGIQ,EAARN,IC6Bc,CAACmB,KAAb,GAAqB,EAArB;AJbL,AGnBc,ADmBf,CFrBO,GImCDZ,KAAK,CAACY,KAAN,GAAc,EAAd;IACAX,MAAM,CAACW,KAAP,GAAe,EAAf;IACAV,OAAO,CAACU,KAAR,GAAgB,EAAhB;AFfC,IEgBDT,AFhBOV,KEgBF,CAACiB,EFhBS,GAAG,EEgBlB,GAAgB,IFhBTjB,CEgBP,OFhBkB,CAAC1C,SAAD,EAAYC,UAAZ,EAAwBoC,IAAxB,EAA8BzC,SAA9B,EAA4C;EEiB/D,AFhBD,CEMF,EAWE,CFjBM+B,GAAG,GAAG/B,GEiBXmE,GAAD,EAAS,CFjBY,IAAItE,YAAA,CAAMK,OAA/B;EACA,EEiBEuD,EFjBIf,CEiBD,CAACuB,KAAJ,GAAY,CFjBG,GAAGzB,QEiBlB,IFjB8B,CAACC,IAAD,CAAhC;EACA,EEiBEuB,EFjBF7D,GEiBO,CAACmC,IAAI,CAACC,SAAL,CAAe4B,GAAf,CAAD,CAAL,MFjBF,EAAepC,GAAf,EAAoB3B,SAApB,EAA+BC,UAA/B;EEkBC,AFjBD,CEGF,GFHQ0C,QAAQ,GAAG,IAAIC,QAAJ,CAAaN,WAAb,CAAjB;AEmBH,CA7BD,CFWIK,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,QAA/B;EACAF,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B7C,SAA9B;AEmBJqC,EFlBIM,EEkBA,CAAC3B,KFlBO,CAAC6B,MAAT,CAAgB,GEkBpB,CAAsB,QAAtB,CFlBI,CEkB4Ba,CFlBGzD,QEkBnC,EFlBI;AEmBJiD,EFlBIP,IEkBE,CAAC3B,GFlBK,CAAC6B,MAAT,CAAgB,KEkBpB,CAAwB,GFlBpB,EAA2BlB,GAA3B,EEkBJ,EAAoC2B,iBAApC;EFjBI,OAAO,IAAA/C,kBAAA,EAAS,2BAAT,EAAsCoC,QAAtC,CAAP;AACH,CAVM","file":"email.7dedd7f5.js","sourceRoot":"..","sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.10.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { init, sendForm } from \"@emailjs/browser\";\r\n\r\ninit(\"user_Awr6KtvDuysdUwnHwX2rq\");\r\n\r\nconst form = document.getElementById(\"form\");\r\nconst name = document.querySelector(\"#name\");\r\nconst organization = document.querySelector(\"#organization\");\r\nconst email = document.querySelector(\"#email\");\r\nconst mobile = document.querySelector(\"#mobile\");\r\nconst content = document.querySelector(\"#content\");\r\nconst agree = document.querySelector(\"#agree\");\r\nconst btn = document.getElementById(\"submit_button\");\r\n\r\nconst checkMobileFormat = (e) => {\r\n  const keyCode = e.keyCode;\r\n  if (keyCode > 58 || keyCode < 47) e.preventDefault();\r\n};\r\n\r\nconst sendEmail = (e) => {\r\n  e.preventDefault();\r\n\r\n  if (!agree.checked) {\r\n    alert(\"개인정보 수집 이용 약관에 동의해주세요.\");\r\n    return;\r\n  }\r\n\r\n  btn.value = \"Sending...\";\r\n\r\n  const templateID = \"template_pj3h1uw\";\r\n  const serviceID = \"service_fwtevtb\";\r\n\r\n  sendForm(serviceID, templateID, \"#form\").then(\r\n    () => {\r\n      btn.value = \"문의 내용 전송하기\";\r\n      alert(\"이메일 전송이 완료되었습니다.\");\r\n      name.value = \"\";\r\n      organization.value = \"\";\r\n      email.value = \"\";\r\n      mobile.value = \"\";\r\n      content.value = \"\";\r\n      agree.checked = false;\r\n    },\r\n    (err) => {\r\n      btn.value = \"문의 내용 전송하기\";\r\n      alert(JSON.stringify(err));\r\n    }\r\n  );\r\n};\r\n\r\nform.addEventListener(\"submit\", sendEmail);\r\nmobile.addEventListener(\"keypress\", checkMobileFormat);\r\n"]}